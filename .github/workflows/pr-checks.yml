name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-changes:
    name: Test Changed Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Get changed Python files
      id: changed-files
      uses: tj-actions/changed-files@v41
      with:
        files: |
          src/**/*.py
          tests/**/*.py

    - name: Run tests for changed files
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "Changed files:"
        echo "${{ steps.changed-files.outputs.all_changed_files }}"

        # Run all tests (you can optimize this to run only affected tests)
        python -m pytest tests/ -v \
          --cov=src \
          --cov-report=term-missing

    - name: Check if tests were added
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        CHANGED_SRC=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "^src/" || true)
        CHANGED_TESTS=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "^tests/" || true)

        if [ "$CHANGED_SRC" -gt 0 ] && [ "$CHANGED_TESTS" -eq 0 ]; then
          echo "⚠️ Warning: Source files changed but no tests were added/modified"
          echo "Please consider adding tests for your changes"
        fi

  coverage-diff:
    name: Coverage Difference
    runs-on: ubuntu-latest

    steps:
    - name: Checkout PR branch
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run coverage on PR branch
      run: |
        python -m pytest tests/ --cov=src --cov-report=json
        mv coverage.json coverage-pr.json

    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}

    - name: Run coverage on base branch
      run: |
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        python -m pytest tests/ --cov=src --cov-report=json || true
        mv coverage.json coverage-base.json

    - name: Compare coverage
      run: |
        PR_COV=$(python -c "import json; data=json.load(open('coverage-pr.json')); print(f\"{data['totals']['percent_covered']:.2f}\")")
        BASE_COV=$(python -c "import json; data=json.load(open('coverage-base.json')); print(f\"{data['totals']['percent_covered']:.2f}\")" 2>/dev/null || echo "0")

        echo "Base coverage: $BASE_COV%"
        echo "PR coverage: $PR_COV%"

        DIFF=$(python -c "print(f\"{float($PR_COV) - float($BASE_COV):.2f}\")")
        echo "Coverage difference: $DIFF%"

        if (( $(echo "$DIFF < -1" | bc -l) )); then
          echo "❌ Coverage decreased by more than 1%"
          exit 1
        elif (( $(echo "$DIFF > 0" | bc -l) )); then
          echo "✅ Coverage increased by $DIFF%"
        else
          echo "✅ Coverage maintained"
        fi

  component-tests:
    name: Component-Specific Tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        component:
          - result_verification_agent
          - correction_learner
          - schema_aware_fixer
          - self_correcting_agent

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run ${{ matrix.component }} tests
      run: |
        python -m pytest tests/test_${{ matrix.component }}.py -v \
          --cov=src/llm/${{ matrix.component }}.py \
          --cov-report=term-missing

    - name: Upload component coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.component }}
        path: .coverage

  pr-comment:
    name: Post PR Comment
    runs-on: ubuntu-latest
    needs: [test-changes, coverage-diff, component-tests]
    if: always()

    steps:
    - name: Create PR comment
      uses: actions/github-script@v7
      with:
        script: |
          const testStatus = '${{ needs.test-changes.result }}';
          const coverageStatus = '${{ needs.coverage-diff.result }}';
          const componentStatus = '${{ needs.component-tests.result }}';

          let emoji = '✅';
          if (testStatus !== 'success' || coverageStatus !== 'success' || componentStatus !== 'success') {
            emoji = '❌';
          }

          const comment = `## ${emoji} PR Check Results

          | Check | Status |
          |-------|--------|
          | Tests | ${testStatus === 'success' ? '✅' : '❌'} ${testStatus} |
          | Coverage | ${coverageStatus === 'success' ? '✅' : '❌'} ${coverageStatus} |
          | Component Tests | ${componentStatus === 'success' ? '✅' : '❌'} ${componentStatus} |

          ### Next Steps
          ${testStatus !== 'success' ? '- ❌ Fix failing tests\n' : ''}
          ${coverageStatus !== 'success' ? '- ❌ Coverage decreased - please add tests\n' : ''}
          ${componentStatus !== 'success' ? '- ❌ Component tests failing - check specific components\n' : ''}
          ${testStatus === 'success' && coverageStatus === 'success' && componentStatus === 'success' ? '✅ All checks passed! Ready for review.' : ''}

          ---

          <details>
          <summary>View detailed test results</summary>

          Check the Actions tab for detailed logs and coverage reports.

          </details>
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
